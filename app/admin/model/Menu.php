<?php
    /**
     * Created by PhpStorm.
     * User: Administrator
     * Date: 2017/7/18
     * Time: 16:25
     */
    namespace app\admin\model;
    use app\model\validata;
    use think\cache\driver\Redis;
    use think\Model;

    class Menu extends Model{
        private $view;
        private $post;
        private $menu_ids;
        private $map;
        private $fied;

        public function initialize()
        {
            parent::initialize(); // TODO: Change the autogenerated stub
        }
        /**
         *
         */
        function set_map($data=array()){
            $map['status'] = 1;
            $map_arr = array_merge($map,$data);
           // dump($map_arr);
            $this->map = $map_arr;
            return $this;
        }
        function set_fied($fied){
            $this->fied = $fied;
            return $this;
        }
        /**获取登录人的权限
         * 读取缓存
         * @return $this
         */
        function set_menu_ids(){
            if(!session('uid')){
                $this->menu_ids =false ;
            }
            $redis = new Redis();
            $User_info = $redis->get(session('uid').'authority');
            $this->menu_ids = $User_info['rule'];
            return $this;
        }

        /*所有一级导航*/
        function parent_nav(){
            $map['pid'] = 0 ;
            $map['status'] = 1;
            $result = $this->where($map)->field('id,menu_name')->select()->toArray();
            $result = convert_array($result,'menu_name');
            return $result;
        }

        /**
         * 获取所有的链接进行组装
         */
        function get_Allmenu($field = 'id,menu_name,url,css,pid,level',$package= true,$ico =''){
            $map['status'] = 1;
            //$map['id'] = array('neq',13);
            /*如果不是超级账号就要查询菜单*/
            if( session('uid')!=1){
                if(!$this->menu_ids){
                    return false;
                }
                $map['id'] = array('in',$this->menu_ids);
            }
            /*查询数据*/
            $result = $this->where($map)->field($field)->select()->toArray();
            //dump($result);exit();
            /*是否要进行数据整装*/
            if($package=== false){
                return  $result;
            }
            $field_arr = array();
            /*字段名转换*/
            if($result && is_array($result)){
                $result =  $this->package_array($result,explode(',',$field));
                if(empty($ico)){
                    $result = arr2tree($result,'0',1);
                }else{
                    $result = arr2tree($result,'0',1,$ico);
                }
            }
            return $result;
        }

        /**
         * 组装数组
         */
        function package_array($data,$field){
            $data_array = array();
            if(!$field || empty($field)){
                exception('要求组装的数据不能为空');
            }
            if(!is_array($field) || !is_array($data)){
                exception('field |  data 参数要为数组');
            }
            foreach($data as $k=>$v){
                foreach($field as $vl){
                    $value = isset($v[$vl]) ?$v[$vl]: false;
                    $data_array[$k][$vl] = $value;
                }
                if(in_array('url',$field)){
                    $data_array[$k]['href'] =  isset($v['url']) ?Url('/'.$v['url'].'/menu_id/'. $v['id']): 'javascript:;';
                }
                if(in_array('spread',$field)){
                    $data_array[$k]['href'] = false;
                }
                if(in_array('menu_name',$field)){
                    $data_array[$k]['title'] = $data_array[$k]['menu_name'];
                    unset($data_array[$k]['menu_name']);
                }
                if(in_array('css',$field)){
                    $data_array[$k]['icon'] = $data_array[$k]['css'];
                    unset($data_array[$k]['css']);
                }
            }
            return $data_array;
        }

        /*前端提交信息接收*/
        function set_post($post=''){
            $this->post = $post;
            return $this;
        }
        /*添加or修改数据整合*/
        function update_data(){
            $post =$this->post;
            $post['id'] = isset($post['id']) ?$post['id'] :0;
            $post = is_AddUpdate($post['id'],$post);
            $post['status'] = 1;
            $post['patn'] = '0-';
            /*判断当前是为顶级导航*/
            if($post['pid']!=0 && $post['pid']){
                /*不是顶级导航根据pid查询父级*/
                $map['id'] = $post['pid'];$map['status'] = 1;
                $field ='level,patn';
                $parent =  $this->where($map)->field($field)->find()->toArray();
                /*判断父级是否存在*/
                if(!$parent){
                    exception('父级不存在或不能被选中');
                }
                /*根据父级导航生成对应的level等级*/
                $post['patn'] = $parent['patn'].$post['pid'].'-';
                $post['level'] = $parent['level']+1;
            }
            /*当不存在静态链接直接组装*/
            if(isset($post['url']) && ($post['m'] && $post['c'] && $post['a'])){
                $post['url'] = $post['m'].'/'.$post['c'].'/'.$post['a'];
            }
            if($post['id']>0){
                $result = $this->update($post);
            }else{
                $result = $this->insert($post);
            }

            if(!$result){
                exception('数据库执行失败');
            }
            return ajax_return(true,'操作成功');
        }
        /*获取指定菜单下的直属子菜单或者是统计菜单*/
        function get_floor($menu_id,$type='count',$nav_seat =''){
            //($menu_id);
            $map = $this->map;
            $map['pid'] = $menu_id;
            if($nav_seat){
                $map['nav_seat'] = array('exp',"IN ($nav_seat,3)");
            }
            $fied = $this->fied;
            if($type == 'count'){
                $data = $this->where($map)->count();
            }else{
                $data = $this->where($map)->field($fied)->select()->toArray();
            }
            return $data;
        }

        /**获取单个菜单详情
         * @return array
         */
        function get_menu_info(){
            $map = $this->map;
            $field= $this->fied;
            $result = $this->where($map)->field($field)->find()->toArray();
            return $result;
        }
    }