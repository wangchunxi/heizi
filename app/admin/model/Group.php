<?php
    /**
     * Created by PhpStorm.
     * User: Administrator
     * Date: 2017/8/25
     * Time: 13:46
     */
    namespace app\admin\model;
    use think\Model;
    use think\Validate;

    class Group extends Model{
        private $fied;/*要查询的字段*/
        private $Post;
        private $page;
        private $page_num;
        private $rule;
        private $msg;
        private $model_val;
        protected $type = [
            'add_time'  =>'timestamp:Y-m-d H:i:s',
            'update_time' =>'timestamp:Y-m-d H:i:s',
        ];
        protected function initialize()
        {
            $this->rule= array(
                'group_name'=>'require|unique:group',
            );
            $this->msg =array(
                'group_name.require'=>'分组名称不能为空','group_name.unique'=>'分组名称已存在',
            );
        //    $this->model_val =new Validate($this->rule,$this->msg);
            parent::initialize(); // TODO: Change the autogenerated stub
        }
        /*当前页数设定*/
        function Set_page(){
            $this->page =  isset($this->Post['page']) ?$this->Post['page'] :1;
            return $this;
        }
        /*当前每页条数限定*/
        function Set_page_num(){
            $this->page_num =  isset($this->Post['page_num']) ?$this->Post['page_num'] : 10;
            return $this;
        }
        /*设置要查询的字段*/
        function  Set_fied($fied){
            $this->fied = $fied;
            return $this;
        }
        function Set_Post($Post){
            $this->Post = $Post;
            return $this;
        }
        function Set_map($post,$request=''){
            switch($request){
                case 'get_list':
                    $map['a.status'] =array('gt',-1);
                    break;
                case 'count_page':
                    $map['status'] = array('gt',-1);
                    break;
            }
            return $map;
        }
        function get_list(){
            $post = $this->Post;
            $map = $this->Set_map($post,__FUNCTION__);
            $data = $this->count_page();
            if($data['total_num']>0){
                $data['list'] = $this->alias('a')
                    ->join('h_admin b ','a.add_id = b.id','Left')
                    ->where($map)->page($this->page,$data['page_num'])
                    ->field($this->fied)
                    ->select();
            }
            return $data;
        }
        function count_page(){
            $map = $this->Set_map($this->Post,__FUNCTION__);
            $data['total_num'] = $this->where($map)->count('id');
            if( $data['total_num']>0){
                $data['page_num'] = $this->page_num;
                //dump($data['total_num']);dump($data['page_num']);
                $data['total_page'] = ceil($data['total_num']/ $data['page_num']);
            }
            return $data;
        }

        /**
         * 添加or修改
         */
        function update_data(){
            $Post = $this->Post;
            $Post['status']  = 1;
            $Validate = new Validate($this->rule,$this->msg);
            $vali_result = $Validate->check($Post);
            if(!$vali_result){
                $tips =  $Validate->getError();
                exception($tips);
            }
            $Post =  is_AddUpdate($Post);
            if($Post['id']>0){
                $result =   $this->update($Post);
            }else{
                $result =  $this->insert($Post);
            }
            if(!$result){
                exception('添加失败');
            }
            return  json_encode(array('status'=>true,'info'=>'操作成功','url'=>''));
        }

        function  find_info($map,$f){

        }
    }